{% include 'headerCustom' %}

import Foundation
import Dip
import RTMVVM

class {{ custom_parameters.entity }}ControllerAssembly: AssemblyProtocol {
    func configure(container: DependencyContainer) {
        container.register(storyboardType: {{ custom_parameters.entity }}Controller.self)
            .resolvingProperties { _, controller in
                
                let repository = try container.resolve() as {{ module_info.name }}.{{ custom_parameters.entity }}VMRepository
                let viewModel = repository.getViewModel()
                
                let subscriber = (try container.resolve() as {{ module_info.name }}.{{ custom_parameters.entity }}ViewModelSubscriber)
                subscriber.addViewModel(model: viewModel)
                
                controller.presenter = {{ module_info.name }}.{{ custom_parameters.entity }}Presenter(subscriber: subscriber,
                                                                     				      repository: repository)
        }
    }
}
